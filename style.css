/*
    style.css

    This file contains the CSS rules to style the website.
    It is linked in the <head> section of index.html using:
    <link rel="stylesheet" href="style.css">

    We've moved background image properties into specific classes
    so different HTML pages can apply different backgrounds using these classes.
*/

/* === 1. Basic Reset and Box Sizing === */
*, *::before, *::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

/* === 2. Body Styles (Base Font, Color, etc.) === */
body {
    font-family: sans-serif;
    line-height: 1.6;
    color: #333;
    background-color: #f4f4f4; /* Fallback background color */
    background-attachment: scroll;
}

/* === 3. Background Image Classes === */
/* Define classes for each specific background image */
.background-microbunker {
    background-image: url('/images/microbunker.png');
    background-repeat: no-repeat;
    background-size: 100% auto;
    background-position: center top;
}

/* === 4. General Layout and Spacing === */
header, main, footer {
    padding: 20px;
    max-width: 1200px;
    margin: 0 auto;
    position: relative;
    z-index: 1;
}

/* Add a background color to content sections for readability */
header, main section, footer {
    background-color: rgba(255, 255, 255, 0.9); /* White with 90% opacity */
    margin-bottom: 20px;
    padding: 20px;
    border-radius: 8px;
}

main {
    padding-top: 20px;
    padding-bottom: 20px;
}

header {
    text-align: center; /* Centers the h1 and the #menu-placeholder/nav */
    padding-bottom: 10px;
}

/* Style the menu placeholder if needed */
#menu-placeholder {
    margin-top: 10px; /* Space between title and menu */
    /* The nav element loaded inside will inherit styles or be targeted directly */
}

/* === 5. Navigation Menu Styles === */
/*
    These styles target the <nav> element and its contents,
    whether it's the fallback <nav> in <noscript> or the <nav>
    loaded via JavaScript into #menu-placeholder.
*/
nav ul {
    list-style: none; /* Removes default bullet points */
    padding: 0; /* Removes default padding */
    /*
        To center the list items horizontally within the nav/header,
        we can use flexbox on the ul and center the items.
        Alternatively, if the nav is treated as an inline-block element
        or has display: block with margin: auto, text-align: center on the header works.
        Let's use flexbox for explicit centering of the list items.
    */
    display: flex; /* Enable flexbox for the ul */
    justify-content: center; /* Center flex items (li) horizontally */
    flex-wrap: wrap; /* Allow items to wrap to the next line on smaller screens */
}

nav li {
    display: inline-block; /* Keep list items horizontal by default */
    /* Note: display: flex on the ul makes the li elements flex items,
             so display: inline-block here might be redundant or behave
             slightly differently depending on context. Let's rely on flexbox. */
    /* display: list-item; /* Revert to default list item behavior if needed */
    margin: 0 15px; /* Adds horizontal space between menu items */
}

nav a {
    text-decoration: none; /* Removes the default underline from links */
    color: #007bff; /* Sets a link color (blue) */
    font-weight: bold; /* Makes link text bold */
    padding: 5px 0; /* Add some padding around the link text */
    display: inline-block; /* Ensures padding works correctly */
}

nav a:hover {
    text-decoration: underline; /* Adds underline on hover for user feedback */
}


/* === 6. Content Section Styles === */
.hero {
    text-align: center;
    padding: 50px 20px;
}

.hero h2 {
    color: #333;
    margin-bottom: 15px;
}

.hero p {
    font-size: 1.1em;
    margin-bottom: 20px;
}

.content-section h2 {
    color: #333;
    margin-bottom: 15px;
}

/* === 7. Footer Styles === */
footer {
    text-align: center;
    padding-top: 20px;
    font-size: 0.9em;
    color: #555;
}


/* === 8. Responsive Design (Media Queries) === */

/* --- Optimization for Tablets and Smaller Desktops (768px to 1023px) --- */
@media screen and (min-width: 768px) and (max-width: 1023px) {
    header, main, footer {
        padding: 25px;
    }

    header h1 { font-size: 2.5em; }
    .hero h2 { font-size: 2em; }

    /* Adjust navigation spacing for tablets if needed */
    nav li {
        margin: 0 10px; /* Slightly less space than desktop */
    }
}

/* --- Optimization for Desktop PCs (1024px and above) --- */
@media screen and (min-width: 1024px) {
    header, main, footer {
        padding: 30px;
    }

    header h1 { font-size: 3em; }
    .hero h2 { font-size: 2.2em; }
    nav li { margin: 0 20px; } /* More space on desktop */
}

/* --- Optimization for Phones (up to 767px) --- */
@media screen and (max-width: 767px) {
    header, main, footer {
        padding: 15px;
    }

    header h1 {
        font-size: 2em;
        word-break: break-word;
    }

    /* Stack navigation links vertically on phones */
    nav ul {
        flex-direction: column; /* Stack flex items vertically */
        align-items: center; /* Center stacked items horizontally */
    }

    nav li {
        display: block; /* Ensure list items take full width for centering */
        margin: 5px 0; /* Add vertical space between stacked links */
    }

    nav a {
        padding: 8px 15px; /* Add more padding to make links easier to tap */
    }

    .hero { padding: 30px 15px; }
    .hero h2 { font-size: 1.5em; }
    .hero p { font-size: 1em; }
    .content-section h2 { font-size: 1.3em; }
    footer { font-size: 0.8em; }
}

/* === End of style.css === */